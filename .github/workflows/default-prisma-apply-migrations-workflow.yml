name: Reusable prisma migration deployment workflow

on:
  workflow_call:
    inputs:
      DEPLOYMENT_PREFIX:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      ORG_NAME:
        required: true
        type: string
      DATABASES:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      PACKAGES_TOKEN:
        required: true

jobs:
  prisma-migrate-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: Setup Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Installing AWS CLI
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create .npmrc
        uses: FerLuisxd/create-npmrc@3
        with:
          org_name: ${{ inputs.ORG_NAME }}
        env:
          AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Apply Migrations for Each Database
        run: |
          for db in ${{ inputs.DATABASES }}; do
            echo "Generating SSM Connection String Name..."
            ENVIRONMENT=${{ inputs.ENVIRONMENT }}
            DEPLOYMENT_PREFIX=${{ inputs.DEPLOYMENT_PREFIX }}
            DATABASE=$db
            SSM_CONNECTION_STRING_NAME=/${ENVIRONMENT}/${DEPLOYMENT_PREFIX}/APPLICATION_POSTGRES_${DATABASE}_DB_MIGRATOR_CONNECTION_STRING
            echo $SSM_CONNECTION_STRING_NAME

            echo "Generating SSM DB Identifier Name..."
            SSM_DB_IDENTIFIER_NAME=/${ENVIRONMENT}/${DEPLOYMENT_PREFIX}/APPLICATION_POSTGRES_DATABASE_IDENTIFIER
            echo $SSM_DB_IDENTIFIER_NAME

            echo "Retrieving SSM DB Connection String..."
            DATABASE_CONNECTION_STRING="$(aws ssm get-parameter --name $SSM_CONNECTION_STRING_NAME --with-decryption | jq -r '.Parameter.Value')"

            echo "Retrieving SSM DB Connection String..."
            DATABASE_IDENTIFIER="$(aws ssm get-parameter --name $SSM_DB_IDENTIFIER_NAME | jq -r '.Parameter.Value')"

            echo "Generating Backup of RDS Instance before migrating and wait for it to finish"
            SNAPSHOT_ID=$( aws rds create-db-snapshot --db-snapshot-identifier Application-Postgres-Backup-$EPOCHSECONDS --db-instance-identifier $DATABASE_IDENTIFIER --query 'DBSnapshot.[DBSnapshotIdentifier]' --output text )
            aws rds wait db-snapshot-completed --db-snapshot-identifier $SNAPSHOT_ID

            echo "Setting DB Connection String..."
            APPLICATION_POSTGRES_CONNECTION_STRING=$DATABASE_CONNECTION_STRING

            echo "Saving DB Connection String to .env file..."
            echo "APPLICATION_POSTGRES_CONNECTION_STRING"=$APPLICATION_POSTGRES_CONNECTION_STRING >> ".env"

            echo "Generating lowercase db name."
            DATABASE_LOWERCASE=$( echo "console.log(\"$DATABASE\".toLowerCase())" | node - );

            echo "Clean runnings..."
            npm run clean

            echo "Applying Prisma migrations to database..."
            npm run prisma-apply-migrations -- --schema ./${DATABASE_LOWERCASE}/prisma/schema.prisma
          done
