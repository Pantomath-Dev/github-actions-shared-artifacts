name: Reusable serverless deployment workflow

on:
  workflow_call:
    inputs:
      PRISMA_BUILD_TARGET:
        required: false
        type: string
      DEPLOYMENT_PREFIX:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      ORG_NAME:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      PACKAGES_TOKEN:
        required: true

jobs:
  serverless-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: Setup Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create .npmrc
        uses: FerLuisxd/create-npmrc@3
        with:
          org_name: ${{ inputs.ORG_NAME }}
        env:
          AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

      - name: Build & Deploy
        run: |
          npm run build
          DEPLOYMENT_PREFIX=${{ inputs.DEPLOYMENT_PREFIX }} ENVIRONMENT=${{ inputs.ENVIRONMENT }} PRISMA_BUILD_TARGET=${{ inputs.PRISMA_BUILD_TARGET }} npm run deploy

      - name: Archive npm failure logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: npm-logs
          path: ~/.npm/_logs
